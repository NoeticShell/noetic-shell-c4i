#!/usr/bin/env python3
import curses, threading, time
from c4i_main import get_current_data_snapshot

UPDATE_INTERVAL = 120
current_data = {"time": "", "alt_news": "", "tweets": "", "contractor": ""}
data_lock = threading.Lock()

def update_data():
    global current_data
    while True:
        new_data = get_current_data_snapshot()
        with data_lock:
            current_data.update(new_data)
        time.sleep(UPDATE_INTERVAL)

def draw_window(win, title, content):
    win.erase()
    h, w = win.getmaxyx()
    win.border()
    win.addstr(0, 2, f"{title}", curses.color_pair(1))
    timestamp = time.strftime("%Y-%m-%d %H:%M:%S")
    win.addstr(1, 2, f"Updated at {timestamp}", curses.color_pair(2))
    for idx, line in enumerate(content.splitlines()):
        if 2+idx < h-1:
            win.addstr(2+idx, 2, line[:w-4])
    win.refresh()

def main(stdscr):
    curses.curs_set(0)
    curses.start_color()
    curses.init_pair(1, curses.COLOR_GREEN, curses.COLOR_BLACK)
    curses.init_pair(2, curses.COLOR_RED, curses.COLOR_BLACK)

    max_y, max_x = stdscr.getmaxyx()
    time_win = curses.newwin(max_y//3, max_x//2, 0, 0)
    alt_news_win = curses.newwin(max_y//3, max_x//2, 0, max_x//2)
    tweets_win = curses.newwin(max_y//3, max_x//2, max_y//3, 0)
    contractor_win = curses.newwin(max_y//3, max_x//2, max_y//3, max_x//2)

    threading.Thread(target=update_data, daemon=True).start()

    while True:
        with data_lock:
            time_content = current_data.get("time", "")
            alt_content = current_data.get("alt_news", "")
            tweets_content = current_data.get("tweets", "")
            contractor_content = current_data.get("contractor", "")
        draw_window(time_win, "Time/Esoterica", time_content)
        draw_window(alt_news_win, "Alt-Media News", alt_content)
        draw_window(tweets_win, "Tweets Feed", tweets_content)
        draw_window(contractor_win, "Contractor/Military News", contractor_content)
        stdscr.timeout(500)
        key = stdscr.getch()
        if key == ord('q'):
            break

if __name__ == "__main__":
    curses.wrapper(main)
